name: Faster Whisper Transcription

on:
  push:
    paths:
      - 'videos/*.mp4'
  workflow_dispatch:

jobs:
  transcribe:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y ffmpeg
          pip install --upgrade pip
          pip install gtts pydub elevenlabs
          sudo apt-get install -y imagemagick
          pip install --no-cache-dir --force-reinstall faster-whisper ffmpeg-python moviepy==1.0.3
      - name: Update ImageMagick policy
        run: |
          if [ -f /etc/ImageMagick-7/policy.xml ]; then
            POLICY_FILE="/etc/ImageMagick-7/policy.xml"
          elif [ -f /etc/ImageMagick-6/policy.xml ]; then
            POLICY_FILE="/etc/ImageMagick-6/policy.xml"
          else
            echo "No ImageMagick policy.xml file found."
            exit 1
          fi
          sudo sed -i 's/<policy domain="path" rights="none" pattern="@\*"/<!-- <policy domain="path" rights="none" pattern="@\*" -->/' $POLICY_FILE || true
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PS"/<!-- <policy domain="coder" rights="none" pattern="PS" -->/' $POLICY_FILE || true
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="EPI"/<!-- <policy domain="coder" rights="none" pattern="EPI" -->/' $POLICY_FILE || true
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="URL"/<!-- <policy domain="coder" rights="none" pattern="URL" -->/' $POLICY_FILE || true
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="MVG"/<!-- <policy domain="coder" rights="none" pattern="MVG" -->/' $POLICY_FILE || true
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="MSL"/<!-- <policy domain="coder" rights="none" pattern="MSL" -->/' $POLICY_FILE || true
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PDF"/<!-- <policy domain="coder" rights="none" pattern="PDF" -->/' $POLICY_FILE || true
      - name: Transcribe and Translate Video
        run: |
          mkdir -p transcripts
          LATEST_VIDEO=$(ls -t videos/*.mp4 | head -n1)
          python transcribe.py "$LATEST_VIDEO"

      - name: Commit and Push Transcription
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add . || exit 0
          git commit -m "Added transcription for latest video" || exit 0
          git push
